version: 2.1

description: |
  Install and use the honeycomb buildevents tool for generating traces of your builds

  Please see the [Honeycomb Buildevents Orb Readme](https://github.com/honeycombio/buildevents-orb)
  for use instructions

  Orb source code available here: https://github.com/honeycombio/buildevents-orb

commands:
  setup_linux:
    steps:
      ### set up buildevents
      - run: |
          mkdir -p /tmp/be/bin
          date +%s > /tmp/be/build_start
          curl -L -o /tmp/be/bin/buildevents https://github.com/honeycombio/buildevents/releases/latest/download/buildevents
          chmod 755 /tmp/be/bin/buildevents
      - persist_to_workspace:
          root: /tmp
          paths:
            - be/build_start
            - be/bin/buildevents
      - run:
          name: report_step
          command: /tmp/be/bin/buildevents step $CIRCLE_WORKFLOW_ID setup $(cat /tmp/be/build_start) setup
          when: always

  ## TODO add in setup_macos here for cross platform builds

  finish_trace:
    parameters:
      result:
        type: string
    steps:
      - attach_workspace:
          at: /tmp/buildevents
      - run: echo "export PATH=${PATH}:/tmp/buildevents/be/bin" >> $BASH_ENV
      - run:
          name: finish build trace
          command: buildevents build $CIRCLE_WORKFLOW_ID $(cat ~/project/start-time) << parameters.result >>

  with_job_span:
    parameters:
      steps:
        type: steps
    steps:
      - attach_workspace:
          at: /tmp/buildevents
      - run:
          name: starting span for job
          command: |
            echo "STEP_START=$(date +%s)" >> $BASH_ENV
            echo "STEP_SPAN_ID=$(echo $CIRCLE_JOB | sha256sum | awk '{print $1}')" >> $BASH_ENV
      - run:
          name: put buildevents in the path
          command: echo "export PATH=${PATH}:/tmp/buildevents/be/bin" >> $BASH_ENV
      - run:
          name: make shorter alias for running cmd
          command: echo "alias be-cmd=\"buildevents cmd $CIRCLE_WORKFLOW_ID $STEP_SPAN_ID\"" >> $BASH_ENV

      ### run the job's steps
      - steps: << parameters.steps >>

      - run:
          name: finishing span for job
          command: buildevents step $CIRCLE_WORKFLOW_ID $STEP_SPAN_ID $STEP_START $CIRCLE_JOB
          when: always

  # berun:
  #   parameters:
  #     name:
  #       type: string
  #     command:
  #       type: string
  #   steps:
  #     - run: be-cmd << parameters.name >> -- << parameters.command >>
